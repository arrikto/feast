// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package go_client

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SavedDatasetServiceClient is the client API for SavedDatasetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SavedDatasetServiceClient interface {
	CreateSavedDataset(ctx context.Context, in *CreateSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error)
	GetSavedDataset(ctx context.Context, in *GetSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error)
	UpdateSavedDataset(ctx context.Context, in *UpdateSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error)
	DeleteSavedDataset(ctx context.Context, in *DeleteSavedDatasetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListSavedDatasets(ctx context.Context, in *ListSavedDatasetsRequest, opts ...grpc.CallOption) (*ListSavedDatasetsResponse, error)
}

type savedDatasetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSavedDatasetServiceClient(cc grpc.ClientConnInterface) SavedDatasetServiceClient {
	return &savedDatasetServiceClient{cc}
}

func (c *savedDatasetServiceClient) CreateSavedDataset(ctx context.Context, in *CreateSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error) {
	out := new(SavedDataset)
	err := c.cc.Invoke(ctx, "/api.SavedDatasetService/CreateSavedDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedDatasetServiceClient) GetSavedDataset(ctx context.Context, in *GetSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error) {
	out := new(SavedDataset)
	err := c.cc.Invoke(ctx, "/api.SavedDatasetService/GetSavedDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedDatasetServiceClient) UpdateSavedDataset(ctx context.Context, in *UpdateSavedDatasetRequest, opts ...grpc.CallOption) (*SavedDataset, error) {
	out := new(SavedDataset)
	err := c.cc.Invoke(ctx, "/api.SavedDatasetService/UpdateSavedDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedDatasetServiceClient) DeleteSavedDataset(ctx context.Context, in *DeleteSavedDatasetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.SavedDatasetService/DeleteSavedDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedDatasetServiceClient) ListSavedDatasets(ctx context.Context, in *ListSavedDatasetsRequest, opts ...grpc.CallOption) (*ListSavedDatasetsResponse, error) {
	out := new(ListSavedDatasetsResponse)
	err := c.cc.Invoke(ctx, "/api.SavedDatasetService/ListSavedDatasets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SavedDatasetServiceServer is the server API for SavedDatasetService service.
// All implementations should embed UnimplementedSavedDatasetServiceServer
// for forward compatibility
type SavedDatasetServiceServer interface {
	CreateSavedDataset(context.Context, *CreateSavedDatasetRequest) (*SavedDataset, error)
	GetSavedDataset(context.Context, *GetSavedDatasetRequest) (*SavedDataset, error)
	UpdateSavedDataset(context.Context, *UpdateSavedDatasetRequest) (*SavedDataset, error)
	DeleteSavedDataset(context.Context, *DeleteSavedDatasetRequest) (*empty.Empty, error)
	ListSavedDatasets(context.Context, *ListSavedDatasetsRequest) (*ListSavedDatasetsResponse, error)
}

// UnimplementedSavedDatasetServiceServer should be embedded to have forward compatible implementations.
type UnimplementedSavedDatasetServiceServer struct {
}

func (UnimplementedSavedDatasetServiceServer) CreateSavedDataset(context.Context, *CreateSavedDatasetRequest) (*SavedDataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSavedDataset not implemented")
}
func (UnimplementedSavedDatasetServiceServer) GetSavedDataset(context.Context, *GetSavedDatasetRequest) (*SavedDataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSavedDataset not implemented")
}
func (UnimplementedSavedDatasetServiceServer) UpdateSavedDataset(context.Context, *UpdateSavedDatasetRequest) (*SavedDataset, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSavedDataset not implemented")
}
func (UnimplementedSavedDatasetServiceServer) DeleteSavedDataset(context.Context, *DeleteSavedDatasetRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSavedDataset not implemented")
}
func (UnimplementedSavedDatasetServiceServer) ListSavedDatasets(context.Context, *ListSavedDatasetsRequest) (*ListSavedDatasetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSavedDatasets not implemented")
}

// UnsafeSavedDatasetServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SavedDatasetServiceServer will
// result in compilation errors.
type UnsafeSavedDatasetServiceServer interface {
	mustEmbedUnimplementedSavedDatasetServiceServer()
}

func RegisterSavedDatasetServiceServer(s grpc.ServiceRegistrar, srv SavedDatasetServiceServer) {
	s.RegisterService(&SavedDatasetService_ServiceDesc, srv)
}

func _SavedDatasetService_CreateSavedDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSavedDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedDatasetServiceServer).CreateSavedDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SavedDatasetService/CreateSavedDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedDatasetServiceServer).CreateSavedDataset(ctx, req.(*CreateSavedDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedDatasetService_GetSavedDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSavedDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedDatasetServiceServer).GetSavedDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SavedDatasetService/GetSavedDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedDatasetServiceServer).GetSavedDataset(ctx, req.(*GetSavedDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedDatasetService_UpdateSavedDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSavedDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedDatasetServiceServer).UpdateSavedDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SavedDatasetService/UpdateSavedDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedDatasetServiceServer).UpdateSavedDataset(ctx, req.(*UpdateSavedDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedDatasetService_DeleteSavedDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSavedDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedDatasetServiceServer).DeleteSavedDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SavedDatasetService/DeleteSavedDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedDatasetServiceServer).DeleteSavedDataset(ctx, req.(*DeleteSavedDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedDatasetService_ListSavedDatasets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSavedDatasetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedDatasetServiceServer).ListSavedDatasets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SavedDatasetService/ListSavedDatasets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedDatasetServiceServer).ListSavedDatasets(ctx, req.(*ListSavedDatasetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SavedDatasetService_ServiceDesc is the grpc.ServiceDesc for SavedDatasetService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SavedDatasetService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.SavedDatasetService",
	HandlerType: (*SavedDatasetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSavedDataset",
			Handler:    _SavedDatasetService_CreateSavedDataset_Handler,
		},
		{
			MethodName: "GetSavedDataset",
			Handler:    _SavedDatasetService_GetSavedDataset_Handler,
		},
		{
			MethodName: "UpdateSavedDataset",
			Handler:    _SavedDatasetService_UpdateSavedDataset_Handler,
		},
		{
			MethodName: "DeleteSavedDataset",
			Handler:    _SavedDatasetService_DeleteSavedDataset_Handler,
		},
		{
			MethodName: "ListSavedDatasets",
			Handler:    _SavedDatasetService_ListSavedDatasets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "SavedDatasetService.proto",
}
