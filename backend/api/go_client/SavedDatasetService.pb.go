// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: SavedDatasetService.proto

package go_client

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSavedDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SavedDataset *SavedDataset `protobuf:"bytes,1,opt,name=saved_dataset,json=savedDataset,proto3" json:"saved_dataset,omitempty"`
}

func (x *CreateSavedDatasetRequest) Reset() {
	*x = CreateSavedDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSavedDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSavedDatasetRequest) ProtoMessage() {}

func (x *CreateSavedDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSavedDatasetRequest.ProtoReflect.Descriptor instead.
func (*CreateSavedDatasetRequest) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSavedDatasetRequest) GetSavedDataset() *SavedDataset {
	if x != nil {
		return x.SavedDataset
	}
	return nil
}

type GetSavedDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetSavedDatasetRequest) Reset() {
	*x = GetSavedDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSavedDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSavedDatasetRequest) ProtoMessage() {}

func (x *GetSavedDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSavedDatasetRequest.ProtoReflect.Descriptor instead.
func (*GetSavedDatasetRequest) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{1}
}

func (x *GetSavedDatasetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSavedDatasetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type UpdateSavedDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SavedDataset *SavedDataset `protobuf:"bytes,1,opt,name=saved_dataset,json=savedDataset,proto3" json:"saved_dataset,omitempty"`
}

func (x *UpdateSavedDatasetRequest) Reset() {
	*x = UpdateSavedDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSavedDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSavedDatasetRequest) ProtoMessage() {}

func (x *UpdateSavedDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSavedDatasetRequest.ProtoReflect.Descriptor instead.
func (*UpdateSavedDatasetRequest) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSavedDatasetRequest) GetSavedDataset() *SavedDataset {
	if x != nil {
		return x.SavedDataset
	}
	return nil
}

type DeleteSavedDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteSavedDatasetRequest) Reset() {
	*x = DeleteSavedDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSavedDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSavedDatasetRequest) ProtoMessage() {}

func (x *DeleteSavedDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSavedDatasetRequest.ProtoReflect.Descriptor instead.
func (*DeleteSavedDatasetRequest) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSavedDatasetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteSavedDatasetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type ListSavedDatasetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ListSavedDatasetsRequest) Reset() {
	*x = ListSavedDatasetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSavedDatasetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSavedDatasetsRequest) ProtoMessage() {}

func (x *ListSavedDatasetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSavedDatasetsRequest.ProtoReflect.Descriptor instead.
func (*ListSavedDatasetsRequest) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{4}
}

func (x *ListSavedDatasetsRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type ListSavedDatasetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SavedDatasets []*SavedDataset `protobuf:"bytes,1,rep,name=saved_datasets,json=savedDatasets,proto3" json:"saved_datasets,omitempty"`
}

func (x *ListSavedDatasetsResponse) Reset() {
	*x = ListSavedDatasetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSavedDatasetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSavedDatasetsResponse) ProtoMessage() {}

func (x *ListSavedDatasetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSavedDatasetsResponse.ProtoReflect.Descriptor instead.
func (*ListSavedDatasetsResponse) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{5}
}

func (x *ListSavedDatasetsResponse) GetSavedDatasets() []*SavedDataset {
	if x != nil {
		return x.SavedDatasets
	}
	return nil
}

type SavedDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the dataset. Must be unique since it's possible to overwrite dataset by name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name of Feast project that this dataset belongs to.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// List of feature references with format "<view name>:<feature name>".
	Features []string `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	// Entity columns + request columns from all feature views used during retrieval.
	JoinKeys []string `protobuf:"bytes,4,rep,name=join_keys,json=joinKeys,proto3" json:"join_keys,omitempty"`
	// Whether full feature names are used in stored data.
	FullFeatureNames bool `protobuf:"varint,5,opt,name=full_feature_names,json=fullFeatureNames,proto3" json:"full_feature_names,omitempty"`
	// Storage location of the saved dataset.
	// Protobuf object transformed to a JSON string.
	Storage string `protobuf:"bytes,6,opt,name=storage,proto3" json:"storage,omitempty"`
	// Optional and only populated if generated from a feature service fetch.
	FeatureServiceName string `protobuf:"bytes,7,opt,name=feature_service_name,json=featureServiceName,proto3" json:"feature_service_name,omitempty"`
	// User defined metadata.
	Tags map[string]string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Creation time of the saved dataset.
	CreatedTimestamp *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	// Last update time of the saved dataset.
	LastUpdatedTimestamp *timestamp.Timestamp `protobuf:"bytes,10,opt,name=last_updated_timestamp,json=lastUpdatedTimestamp,proto3" json:"last_updated_timestamp,omitempty"`
	// Min timestamp in the dataset (needed for retrieval).
	MinEventTimestamp *timestamp.Timestamp `protobuf:"bytes,11,opt,name=min_event_timestamp,json=minEventTimestamp,proto3" json:"min_event_timestamp,omitempty"`
	// Max timestamp in the dataset (needed for retrieval).
	MaxEventTimestamp *timestamp.Timestamp `protobuf:"bytes,12,opt,name=max_event_timestamp,json=maxEventTimestamp,proto3" json:"max_event_timestamp,omitempty"`
}

func (x *SavedDataset) Reset() {
	*x = SavedDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SavedDatasetService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedDataset) ProtoMessage() {}

func (x *SavedDataset) ProtoReflect() protoreflect.Message {
	mi := &file_SavedDatasetService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedDataset.ProtoReflect.Descriptor instead.
func (*SavedDataset) Descriptor() ([]byte, []int) {
	return file_SavedDatasetService_proto_rawDescGZIP(), []int{6}
}

func (x *SavedDataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavedDataset) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *SavedDataset) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SavedDataset) GetJoinKeys() []string {
	if x != nil {
		return x.JoinKeys
	}
	return nil
}

func (x *SavedDataset) GetFullFeatureNames() bool {
	if x != nil {
		return x.FullFeatureNames
	}
	return false
}

func (x *SavedDataset) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *SavedDataset) GetFeatureServiceName() string {
	if x != nil {
		return x.FeatureServiceName
	}
	return ""
}

func (x *SavedDataset) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SavedDataset) GetCreatedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedTimestamp
	}
	return nil
}

func (x *SavedDataset) GetLastUpdatedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdatedTimestamp
	}
	return nil
}

func (x *SavedDataset) GetMinEventTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.MinEventTimestamp
	}
	return nil
}

func (x *SavedDataset) GetMaxEventTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.MaxEventTimestamp
	}
	return nil
}

var File_SavedDatasetService_proto protoreflect.FileDescriptor

var file_SavedDatasetService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x61, 0x76,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x49,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x55, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0e,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22, 0x8c, 0x05, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x6c,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6d,
	0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x4a, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xb7, 0x04, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x13,
	0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x3a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x12, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12,
	0x73, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x22, 0x13, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x3a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x69, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12,
	0x6e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x42,
	0x82, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66,
	0x65, 0x61, 0x73, 0x74, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x92, 0x41, 0x4d, 0x52, 0x1c, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x11, 0x12, 0x0f, 0x0a, 0x0d, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x1f, 0x0a, 0x1d, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SavedDatasetService_proto_rawDescOnce sync.Once
	file_SavedDatasetService_proto_rawDescData = file_SavedDatasetService_proto_rawDesc
)

func file_SavedDatasetService_proto_rawDescGZIP() []byte {
	file_SavedDatasetService_proto_rawDescOnce.Do(func() {
		file_SavedDatasetService_proto_rawDescData = protoimpl.X.CompressGZIP(file_SavedDatasetService_proto_rawDescData)
	})
	return file_SavedDatasetService_proto_rawDescData
}

var file_SavedDatasetService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_SavedDatasetService_proto_goTypes = []interface{}{
	(*CreateSavedDatasetRequest)(nil), // 0: api.CreateSavedDatasetRequest
	(*GetSavedDatasetRequest)(nil),    // 1: api.GetSavedDatasetRequest
	(*UpdateSavedDatasetRequest)(nil), // 2: api.UpdateSavedDatasetRequest
	(*DeleteSavedDatasetRequest)(nil), // 3: api.DeleteSavedDatasetRequest
	(*ListSavedDatasetsRequest)(nil),  // 4: api.ListSavedDatasetsRequest
	(*ListSavedDatasetsResponse)(nil), // 5: api.ListSavedDatasetsResponse
	(*SavedDataset)(nil),              // 6: api.SavedDataset
	nil,                               // 7: api.SavedDataset.TagsEntry
	(*timestamp.Timestamp)(nil),       // 8: google.protobuf.Timestamp
	(*empty.Empty)(nil),               // 9: google.protobuf.Empty
}
var file_SavedDatasetService_proto_depIdxs = []int32{
	6,  // 0: api.CreateSavedDatasetRequest.saved_dataset:type_name -> api.SavedDataset
	6,  // 1: api.UpdateSavedDatasetRequest.saved_dataset:type_name -> api.SavedDataset
	6,  // 2: api.ListSavedDatasetsResponse.saved_datasets:type_name -> api.SavedDataset
	7,  // 3: api.SavedDataset.tags:type_name -> api.SavedDataset.TagsEntry
	8,  // 4: api.SavedDataset.created_timestamp:type_name -> google.protobuf.Timestamp
	8,  // 5: api.SavedDataset.last_updated_timestamp:type_name -> google.protobuf.Timestamp
	8,  // 6: api.SavedDataset.min_event_timestamp:type_name -> google.protobuf.Timestamp
	8,  // 7: api.SavedDataset.max_event_timestamp:type_name -> google.protobuf.Timestamp
	0,  // 8: api.SavedDatasetService.CreateSavedDataset:input_type -> api.CreateSavedDatasetRequest
	1,  // 9: api.SavedDatasetService.GetSavedDataset:input_type -> api.GetSavedDatasetRequest
	2,  // 10: api.SavedDatasetService.UpdateSavedDataset:input_type -> api.UpdateSavedDatasetRequest
	3,  // 11: api.SavedDatasetService.DeleteSavedDataset:input_type -> api.DeleteSavedDatasetRequest
	4,  // 12: api.SavedDatasetService.ListSavedDatasets:input_type -> api.ListSavedDatasetsRequest
	6,  // 13: api.SavedDatasetService.CreateSavedDataset:output_type -> api.SavedDataset
	6,  // 14: api.SavedDatasetService.GetSavedDataset:output_type -> api.SavedDataset
	6,  // 15: api.SavedDatasetService.UpdateSavedDataset:output_type -> api.SavedDataset
	9,  // 16: api.SavedDatasetService.DeleteSavedDataset:output_type -> google.protobuf.Empty
	5,  // 17: api.SavedDatasetService.ListSavedDatasets:output_type -> api.ListSavedDatasetsResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_SavedDatasetService_proto_init() }
func file_SavedDatasetService_proto_init() {
	if File_SavedDatasetService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SavedDatasetService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSavedDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSavedDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSavedDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSavedDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSavedDatasetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSavedDatasetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SavedDatasetService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SavedDatasetService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SavedDatasetService_proto_goTypes,
		DependencyIndexes: file_SavedDatasetService_proto_depIdxs,
		MessageInfos:      file_SavedDatasetService_proto_msgTypes,
	}.Build()
	File_SavedDatasetService_proto = out.File
	file_SavedDatasetService_proto_rawDesc = nil
	file_SavedDatasetService_proto_goTypes = nil
	file_SavedDatasetService_proto_depIdxs = nil
}
