// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: OnDemandFeatureViewService.proto

package go_client

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOnDemandFeatureViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDemandFeatureView *OnDemandFeatureView `protobuf:"bytes,1,opt,name=on_demand_feature_view,json=onDemandFeatureView,proto3" json:"on_demand_feature_view,omitempty"`
}

func (x *CreateOnDemandFeatureViewRequest) Reset() {
	*x = CreateOnDemandFeatureViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOnDemandFeatureViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOnDemandFeatureViewRequest) ProtoMessage() {}

func (x *CreateOnDemandFeatureViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOnDemandFeatureViewRequest.ProtoReflect.Descriptor instead.
func (*CreateOnDemandFeatureViewRequest) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOnDemandFeatureViewRequest) GetOnDemandFeatureView() *OnDemandFeatureView {
	if x != nil {
		return x.OnDemandFeatureView
	}
	return nil
}

type GetOnDemandFeatureViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetOnDemandFeatureViewRequest) Reset() {
	*x = GetOnDemandFeatureViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnDemandFeatureViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnDemandFeatureViewRequest) ProtoMessage() {}

func (x *GetOnDemandFeatureViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnDemandFeatureViewRequest.ProtoReflect.Descriptor instead.
func (*GetOnDemandFeatureViewRequest) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{1}
}

func (x *GetOnDemandFeatureViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOnDemandFeatureViewRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type UpdateOnDemandFeatureViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDemandFeatureView *OnDemandFeatureView `protobuf:"bytes,1,opt,name=on_demand_feature_view,json=onDemandFeatureView,proto3" json:"on_demand_feature_view,omitempty"`
}

func (x *UpdateOnDemandFeatureViewRequest) Reset() {
	*x = UpdateOnDemandFeatureViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnDemandFeatureViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnDemandFeatureViewRequest) ProtoMessage() {}

func (x *UpdateOnDemandFeatureViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnDemandFeatureViewRequest.ProtoReflect.Descriptor instead.
func (*UpdateOnDemandFeatureViewRequest) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOnDemandFeatureViewRequest) GetOnDemandFeatureView() *OnDemandFeatureView {
	if x != nil {
		return x.OnDemandFeatureView
	}
	return nil
}

type DeleteOnDemandFeatureViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteOnDemandFeatureViewRequest) Reset() {
	*x = DeleteOnDemandFeatureViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOnDemandFeatureViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOnDemandFeatureViewRequest) ProtoMessage() {}

func (x *DeleteOnDemandFeatureViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOnDemandFeatureViewRequest.ProtoReflect.Descriptor instead.
func (*DeleteOnDemandFeatureViewRequest) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteOnDemandFeatureViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteOnDemandFeatureViewRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type ListOnDemandFeatureViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ListOnDemandFeatureViewsRequest) Reset() {
	*x = ListOnDemandFeatureViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOnDemandFeatureViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnDemandFeatureViewsRequest) ProtoMessage() {}

func (x *ListOnDemandFeatureViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnDemandFeatureViewsRequest.ProtoReflect.Descriptor instead.
func (*ListOnDemandFeatureViewsRequest) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{4}
}

func (x *ListOnDemandFeatureViewsRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type ListOnDemandFeatureViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDemandFeatureViews []*OnDemandFeatureView `protobuf:"bytes,1,rep,name=on_demand_feature_views,json=onDemandFeatureViews,proto3" json:"on_demand_feature_views,omitempty"`
}

func (x *ListOnDemandFeatureViewsResponse) Reset() {
	*x = ListOnDemandFeatureViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOnDemandFeatureViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOnDemandFeatureViewsResponse) ProtoMessage() {}

func (x *ListOnDemandFeatureViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOnDemandFeatureViewsResponse.ProtoReflect.Descriptor instead.
func (*ListOnDemandFeatureViewsResponse) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{5}
}

func (x *ListOnDemandFeatureViewsResponse) GetOnDemandFeatureViews() []*OnDemandFeatureView {
	if x != nil {
		return x.OnDemandFeatureViews
	}
	return nil
}

type OnDemandFeatureView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the on demand feature view. Must be unique. Not updated.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name of Feast project that this on demand feature view belongs to.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// List of features specifications for each feature defined with this on demand feature view.
	Features []*Feature `protobuf:"bytes,3,rep,name=features,proto3" json:"features,omitempty"`
	// Map of sources for this on demand feature view.
	// Sources are transformed from Protobuf objects to JSON strings.
	Sources map[string]string `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// User defined function.
	UserDefinedFunction *UserDefinedFunction `protobuf:"bytes,5,opt,name=user_defined_function,json=userDefinedFunction,proto3" json:"user_defined_function,omitempty"`
	// Description of the on demand feature view.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// User defined metadata.
	Tags map[string]string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Owner of the on demand feature view.
	Owner string `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	// Creation time of the on demand feature view.
	CreatedTimestamp *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	// Last update time of the on demand feature view.
	LastUpdatedTimestamp *timestamp.Timestamp `protobuf:"bytes,10,opt,name=last_updated_timestamp,json=lastUpdatedTimestamp,proto3" json:"last_updated_timestamp,omitempty"`
}

func (x *OnDemandFeatureView) Reset() {
	*x = OnDemandFeatureView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnDemandFeatureView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnDemandFeatureView) ProtoMessage() {}

func (x *OnDemandFeatureView) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnDemandFeatureView.ProtoReflect.Descriptor instead.
func (*OnDemandFeatureView) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{6}
}

func (x *OnDemandFeatureView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnDemandFeatureView) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *OnDemandFeatureView) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *OnDemandFeatureView) GetSources() map[string]string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *OnDemandFeatureView) GetUserDefinedFunction() *UserDefinedFunction {
	if x != nil {
		return x.UserDefinedFunction
	}
	return nil
}

func (x *OnDemandFeatureView) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OnDemandFeatureView) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *OnDemandFeatureView) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *OnDemandFeatureView) GetCreatedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedTimestamp
	}
	return nil
}

func (x *OnDemandFeatureView) GetLastUpdatedTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdatedTimestamp
	}
	return nil
}

// Serialized representation of Python function.
type UserDefinedFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The function name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The Python-syntax function body (serialized by dill).
	Body []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *UserDefinedFunction) Reset() {
	*x = UserDefinedFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OnDemandFeatureViewService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDefinedFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDefinedFunction) ProtoMessage() {}

func (x *UserDefinedFunction) ProtoReflect() protoreflect.Message {
	mi := &file_OnDemandFeatureViewService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDefinedFunction.ProtoReflect.Descriptor instead.
func (*UserDefinedFunction) Descriptor() ([]byte, []int) {
	return file_OnDemandFeatureViewService_proto_rawDescGZIP(), []int{7}
}

func (x *UserDefinedFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDefinedFunction) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_OnDemandFeatureViewService_proto protoreflect.FileDescriptor

var file_OnDemandFeatureViewService_proto_rawDesc = []byte{
	0x0a, 0x20, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x16, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e,
	0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x13, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x4d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x44,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x71, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x16, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x13, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x50, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x3b, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x73, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x17, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x14, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0xfc, 0x04, 0x0a,
	0x13, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x4c, 0x0a,
	0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x50, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x32, 0xd8, 0x05, 0x0a, 0x1a, 0x4f,
	0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34,
	0x22, 0x1a, 0x2f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x3a, 0x16, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x77, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d,
	0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x98, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e,
	0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x22, 0x3a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x22, 0x1a, 0x2f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x44,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x3a, 0x16, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x12, 0x7e, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x8a, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x6e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x42, 0x82, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x61, 0x73, 0x74, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x66,
	0x65, 0x61, 0x73, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x92, 0x41, 0x4d, 0x52, 0x1c, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x11, 0x12, 0x0f, 0x0a, 0x0d, 0x1a, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5a, 0x1f, 0x0a, 0x1d, 0x0a,
	0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a,
	0x0a, 0x06, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_OnDemandFeatureViewService_proto_rawDescOnce sync.Once
	file_OnDemandFeatureViewService_proto_rawDescData = file_OnDemandFeatureViewService_proto_rawDesc
)

func file_OnDemandFeatureViewService_proto_rawDescGZIP() []byte {
	file_OnDemandFeatureViewService_proto_rawDescOnce.Do(func() {
		file_OnDemandFeatureViewService_proto_rawDescData = protoimpl.X.CompressGZIP(file_OnDemandFeatureViewService_proto_rawDescData)
	})
	return file_OnDemandFeatureViewService_proto_rawDescData
}

var file_OnDemandFeatureViewService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_OnDemandFeatureViewService_proto_goTypes = []interface{}{
	(*CreateOnDemandFeatureViewRequest)(nil), // 0: api.CreateOnDemandFeatureViewRequest
	(*GetOnDemandFeatureViewRequest)(nil),    // 1: api.GetOnDemandFeatureViewRequest
	(*UpdateOnDemandFeatureViewRequest)(nil), // 2: api.UpdateOnDemandFeatureViewRequest
	(*DeleteOnDemandFeatureViewRequest)(nil), // 3: api.DeleteOnDemandFeatureViewRequest
	(*ListOnDemandFeatureViewsRequest)(nil),  // 4: api.ListOnDemandFeatureViewsRequest
	(*ListOnDemandFeatureViewsResponse)(nil), // 5: api.ListOnDemandFeatureViewsResponse
	(*OnDemandFeatureView)(nil),              // 6: api.OnDemandFeatureView
	(*UserDefinedFunction)(nil),              // 7: api.UserDefinedFunction
	nil,                                      // 8: api.OnDemandFeatureView.SourcesEntry
	nil,                                      // 9: api.OnDemandFeatureView.TagsEntry
	(*Feature)(nil),                          // 10: api.Feature
	(*timestamp.Timestamp)(nil),              // 11: google.protobuf.Timestamp
	(*empty.Empty)(nil),                      // 12: google.protobuf.Empty
}
var file_OnDemandFeatureViewService_proto_depIdxs = []int32{
	6,  // 0: api.CreateOnDemandFeatureViewRequest.on_demand_feature_view:type_name -> api.OnDemandFeatureView
	6,  // 1: api.UpdateOnDemandFeatureViewRequest.on_demand_feature_view:type_name -> api.OnDemandFeatureView
	6,  // 2: api.ListOnDemandFeatureViewsResponse.on_demand_feature_views:type_name -> api.OnDemandFeatureView
	10, // 3: api.OnDemandFeatureView.features:type_name -> api.Feature
	8,  // 4: api.OnDemandFeatureView.sources:type_name -> api.OnDemandFeatureView.SourcesEntry
	7,  // 5: api.OnDemandFeatureView.user_defined_function:type_name -> api.UserDefinedFunction
	9,  // 6: api.OnDemandFeatureView.tags:type_name -> api.OnDemandFeatureView.TagsEntry
	11, // 7: api.OnDemandFeatureView.created_timestamp:type_name -> google.protobuf.Timestamp
	11, // 8: api.OnDemandFeatureView.last_updated_timestamp:type_name -> google.protobuf.Timestamp
	0,  // 9: api.OnDemandFeatureViewService.CreateOnDemandFeatureView:input_type -> api.CreateOnDemandFeatureViewRequest
	1,  // 10: api.OnDemandFeatureViewService.GetOnDemandFeatureView:input_type -> api.GetOnDemandFeatureViewRequest
	2,  // 11: api.OnDemandFeatureViewService.UpdateOnDemandFeatureView:input_type -> api.UpdateOnDemandFeatureViewRequest
	3,  // 12: api.OnDemandFeatureViewService.DeleteOnDemandFeatureView:input_type -> api.DeleteOnDemandFeatureViewRequest
	4,  // 13: api.OnDemandFeatureViewService.ListOnDemandFeatureViews:input_type -> api.ListOnDemandFeatureViewsRequest
	6,  // 14: api.OnDemandFeatureViewService.CreateOnDemandFeatureView:output_type -> api.OnDemandFeatureView
	6,  // 15: api.OnDemandFeatureViewService.GetOnDemandFeatureView:output_type -> api.OnDemandFeatureView
	6,  // 16: api.OnDemandFeatureViewService.UpdateOnDemandFeatureView:output_type -> api.OnDemandFeatureView
	12, // 17: api.OnDemandFeatureViewService.DeleteOnDemandFeatureView:output_type -> google.protobuf.Empty
	5,  // 18: api.OnDemandFeatureViewService.ListOnDemandFeatureViews:output_type -> api.ListOnDemandFeatureViewsResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_OnDemandFeatureViewService_proto_init() }
func file_OnDemandFeatureViewService_proto_init() {
	if File_OnDemandFeatureViewService_proto != nil {
		return
	}
	file_Feature_proto_init()
	file_ValueType_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_OnDemandFeatureViewService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOnDemandFeatureViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnDemandFeatureViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnDemandFeatureViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOnDemandFeatureViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOnDemandFeatureViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOnDemandFeatureViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnDemandFeatureView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OnDemandFeatureViewService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDefinedFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OnDemandFeatureViewService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_OnDemandFeatureViewService_proto_goTypes,
		DependencyIndexes: file_OnDemandFeatureViewService_proto_depIdxs,
		MessageInfos:      file_OnDemandFeatureViewService_proto_msgTypes,
	}.Build()
	File_OnDemandFeatureViewService_proto = out.File
	file_OnDemandFeatureViewService_proto_rawDesc = nil
	file_OnDemandFeatureViewService_proto_goTypes = nil
	file_OnDemandFeatureViewService_proto_depIdxs = nil
}
