# coding: utf-8

"""
    Feast Registry API

    This file contains REST API specification for Feast Registry. The file is autogenerated from the swagger definition.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import frs_api
from frs_api.models.api_feature_service import ApiFeatureService  # noqa: E501
from frs_api.rest import ApiException

class TestApiFeatureService(unittest.TestCase):
    """ApiFeatureService unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ApiFeatureService
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = frs_api.models.api_feature_service.ApiFeatureService()  # noqa: E501
        if include_optional :
            return ApiFeatureService(
                name = '0', 
                project = '0', 
                features = [
                    frs_api.models.api_feature_view_projection.apiFeatureViewProjection(
                        feature_view_name = '0', 
                        feature_view_name_alias = '0', 
                        feature_columns = [
                            frs_api.models.api_feature.apiFeature(
                                name = '0', 
                                value_type = 'INVALID', 
                                tags = {
                                    'key' : '0'
                                    }, )
                            ], 
                        join_key_map = {
                            'key' : '0'
                            }, )
                    ], 
                tags = {
                    'key' : '0'
                    }, 
                description = '0', 
                owner = '0', 
                logging_config = '0', 
                created_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                last_updated_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return ApiFeatureService(
        )

    def testApiFeatureService(self):
        """Test ApiFeatureService"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
