// Code generated by go-swagger; DO NOT EDIT.

package data_source_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	data_source_model "github.com/feast-dev/feast/backend/api/go_http_client/data_source_model"
)

// DataSourceServiceUpdateDataSourceReader is a Reader for the DataSourceServiceUpdateDataSource structure.
type DataSourceServiceUpdateDataSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DataSourceServiceUpdateDataSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDataSourceServiceUpdateDataSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDataSourceServiceUpdateDataSourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDataSourceServiceUpdateDataSourceOK creates a DataSourceServiceUpdateDataSourceOK with default headers values
func NewDataSourceServiceUpdateDataSourceOK() *DataSourceServiceUpdateDataSourceOK {
	return &DataSourceServiceUpdateDataSourceOK{}
}

/*DataSourceServiceUpdateDataSourceOK handles this case with default header values.

A successful response.
*/
type DataSourceServiceUpdateDataSourceOK struct {
	Payload *data_source_model.APIDataSource
}

func (o *DataSourceServiceUpdateDataSourceOK) Error() string {
	return fmt.Sprintf("[POST /UpdateDataSource][%d] dataSourceServiceUpdateDataSourceOK  %+v", 200, o.Payload)
}

func (o *DataSourceServiceUpdateDataSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(data_source_model.APIDataSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDataSourceServiceUpdateDataSourceDefault creates a DataSourceServiceUpdateDataSourceDefault with default headers values
func NewDataSourceServiceUpdateDataSourceDefault(code int) *DataSourceServiceUpdateDataSourceDefault {
	return &DataSourceServiceUpdateDataSourceDefault{
		_statusCode: code,
	}
}

/*DataSourceServiceUpdateDataSourceDefault handles this case with default header values.

An unexpected error response.
*/
type DataSourceServiceUpdateDataSourceDefault struct {
	_statusCode int

	Payload *data_source_model.GatewayruntimeError
}

// Code gets the status code for the data source service update data source default response
func (o *DataSourceServiceUpdateDataSourceDefault) Code() int {
	return o._statusCode
}

func (o *DataSourceServiceUpdateDataSourceDefault) Error() string {
	return fmt.Sprintf("[POST /UpdateDataSource][%d] DataSourceService_UpdateDataSource default  %+v", o._statusCode, o.Payload)
}

func (o *DataSourceServiceUpdateDataSourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(data_source_model.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
