// Code generated by go-swagger; DO NOT EDIT.

package feature_service_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	feature_service_model "github.com/feast-dev/feast/backend/api/go_http_client/feature_service_model"
)

// FeatureServiceServiceGetFeatureServiceReader is a Reader for the FeatureServiceServiceGetFeatureService structure.
type FeatureServiceServiceGetFeatureServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FeatureServiceServiceGetFeatureServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFeatureServiceServiceGetFeatureServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewFeatureServiceServiceGetFeatureServiceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFeatureServiceServiceGetFeatureServiceOK creates a FeatureServiceServiceGetFeatureServiceOK with default headers values
func NewFeatureServiceServiceGetFeatureServiceOK() *FeatureServiceServiceGetFeatureServiceOK {
	return &FeatureServiceServiceGetFeatureServiceOK{}
}

/*FeatureServiceServiceGetFeatureServiceOK handles this case with default header values.

A successful response.
*/
type FeatureServiceServiceGetFeatureServiceOK struct {
	Payload *feature_service_model.APIFeatureService
}

func (o *FeatureServiceServiceGetFeatureServiceOK) Error() string {
	return fmt.Sprintf("[GET /GetFeatureService][%d] featureServiceServiceGetFeatureServiceOK  %+v", 200, o.Payload)
}

func (o *FeatureServiceServiceGetFeatureServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(feature_service_model.APIFeatureService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFeatureServiceServiceGetFeatureServiceDefault creates a FeatureServiceServiceGetFeatureServiceDefault with default headers values
func NewFeatureServiceServiceGetFeatureServiceDefault(code int) *FeatureServiceServiceGetFeatureServiceDefault {
	return &FeatureServiceServiceGetFeatureServiceDefault{
		_statusCode: code,
	}
}

/*FeatureServiceServiceGetFeatureServiceDefault handles this case with default header values.

An unexpected error response.
*/
type FeatureServiceServiceGetFeatureServiceDefault struct {
	_statusCode int

	Payload *feature_service_model.GatewayruntimeError
}

// Code gets the status code for the feature service service get feature service default response
func (o *FeatureServiceServiceGetFeatureServiceDefault) Code() int {
	return o._statusCode
}

func (o *FeatureServiceServiceGetFeatureServiceDefault) Error() string {
	return fmt.Sprintf("[GET /GetFeatureService][%d] FeatureServiceService_GetFeatureService default  %+v", o._statusCode, o.Payload)
}

func (o *FeatureServiceServiceGetFeatureServiceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(feature_service_model.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
