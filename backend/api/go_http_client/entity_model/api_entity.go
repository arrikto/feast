// Code generated by go-swagger; DO NOT EDIT.

package entity_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIEntity api entity
// swagger:model apiEntity
type APIEntity struct {

	// Creation time of the entity.
	// Format: date-time
	CreatedTimestamp strfmt.DateTime `json:"created_timestamp,omitempty"`

	// Description of the entity.
	Description string `json:"description,omitempty"`

	// Join key for the entity (i.e. name of the column the entity maps to).
	JoinKey string `json:"join_key,omitempty"`

	// Last update time of the entity.
	// Format: date-time
	LastUpdatedTimestamp strfmt.DateTime `json:"last_updated_timestamp,omitempty"`

	// Name of the entity.
	Name string `json:"name,omitempty"`

	// Owner of the entity.
	Owner string `json:"owner,omitempty"`

	// Name of Feast project that this entity belongs to.
	Project string `json:"project,omitempty"`

	// User defined metadata.
	Tags map[string]string `json:"tags,omitempty"`

	// Type of the entity.
	ValueType ValueTypeEnum `json:"value_type,omitempty"`
}

// Validate validates this api entity
func (m *APIEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValueType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIEntity) validateCreatedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("created_timestamp", "body", "date-time", m.CreatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APIEntity) validateLastUpdatedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpdatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("last_updated_timestamp", "body", "date-time", m.LastUpdatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *APIEntity) validateValueType(formats strfmt.Registry) error {

	if swag.IsZero(m.ValueType) { // not required
		return nil
	}

	if err := m.ValueType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("value_type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIEntity) UnmarshalBinary(b []byte) error {
	var res APIEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
